<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Fatalities by year)' inline='true' name='federated.1s3us45131klwi1f6k7b30l26amm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Fatalities by year' name='excel-direct.0lc35zn16sqdht194oere0jn7yjr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Zack/Documents/Bellevue/DSC 640/Fatalities by year.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0lc35zn16sqdht194oere0jn7yjr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C104:no:A1:C104:0' header='yes' outcome='6'>
            <column datatype='integer' name='Rank' ordinal='0' />
            <column datatype='string' name='Year' ordinal='1' />
            <column datatype='integer' name='Fatalities' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0lc35zn16sqdht194oere0jn7yjr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C104:no:A1:C104:0' header='yes' outcome='6'>
            <column datatype='integer' name='Rank' ordinal='0' />
            <column datatype='string' name='Year' ordinal='1' />
            <column datatype='integer' name='Fatalities' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C104:no:A1:C104:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9A182EB3D8A7411E9D6F46044992DEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9A182EB3D8A7411E9D6F46044992DEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fatalities]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Fatalities</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9A182EB3D8A7411E9D6F46044992DEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Number of Airline Fatalities' datatype='integer' name='[Fatalities]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9A182EB3D8A7411E9D6F46044992DEA8]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9A182EB3D8A7411E9D6F46044992DEA8'>
            <properties context=''>
              <relation connection='excel-direct.0lc35zn16sqdht194oere0jn7yjr' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C104:no:A1:C104:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Rank' ordinal='0' />
                  <column datatype='string' name='Year' ordinal='1' />
                  <column datatype='integer' name='Fatalities' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='1913-2018 (Motor-Vehicle Deaths and Rates, 1913-2018)' inline='true' name='federated.0s0yvmu1k79su718iaav41u2hrun' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Motor-Vehicle Deaths and Rates, 1913-2018' name='excel-direct.1x3tm9b12ciugu1asl3se1val6fk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Zack/Documents/Bellevue/DSC 640/Motor-Vehicle Deaths and Rates, 1913-2018.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1x3tm9b12ciugu1asl3se1val6fk' name='1913-2018' table='[&apos;1913-2018$&apos;]' type='table'>
          <columns gridOrigin='A1:H107:no:A1:H107:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='integer' name='Number of deaths' ordinal='1' />
            <column datatype='real' name='Estimated Vehicles (millions)' ordinal='2' />
            <column datatype='string' name='Estimated Vehicle miles (billions)' ordinal='3' />
            <column datatype='real' name='Estimated Drivers (millions)' ordinal='4' />
            <column datatype='real' name='Deaths Per 10,000 motor vehicles' ordinal='5' />
            <column datatype='string' name='Deaths Per 100,000,000 vehicle miles' ordinal='6' />
            <column datatype='real' name='Deaths Per 100,000 population' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1x3tm9b12ciugu1asl3se1val6fk' name='1913-2018' table='[&apos;1913-2018$&apos;]' type='table'>
          <columns gridOrigin='A1:H107:no:A1:H107:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='integer' name='Number of deaths' ordinal='1' />
            <column datatype='real' name='Estimated Vehicles (millions)' ordinal='2' />
            <column datatype='string' name='Estimated Vehicle miles (billions)' ordinal='3' />
            <column datatype='real' name='Estimated Drivers (millions)' ordinal='4' />
            <column datatype='real' name='Deaths Per 10,000 motor vehicles' ordinal='5' />
            <column datatype='string' name='Deaths Per 100,000,000 vehicle miles' ordinal='6' />
            <column datatype='real' name='Deaths Per 100,000 population' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[1913-2018]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H107:no:A1:H107:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[1913-2018]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1913-2018_B48C1D0E1FE9472DB44990C4B196598E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of deaths]</local-name>
            <parent-name>[1913-2018]</parent-name>
            <remote-alias>Number of deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1913-2018_B48C1D0E1FE9472DB44990C4B196598E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated Vehicles (millions)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated Vehicles (millions)]</local-name>
            <parent-name>[1913-2018]</parent-name>
            <remote-alias>Estimated Vehicles (millions)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1913-2018_B48C1D0E1FE9472DB44990C4B196598E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated Vehicle miles (billions)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Estimated Vehicle miles (billions)]</local-name>
            <parent-name>[1913-2018]</parent-name>
            <remote-alias>Estimated Vehicle miles (billions)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1913-2018_B48C1D0E1FE9472DB44990C4B196598E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated Drivers (millions)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated Drivers (millions)]</local-name>
            <parent-name>[1913-2018]</parent-name>
            <remote-alias>Estimated Drivers (millions)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1913-2018_B48C1D0E1FE9472DB44990C4B196598E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths Per 10,000 motor vehicles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths Per 10,000 motor vehicles]</local-name>
            <parent-name>[1913-2018]</parent-name>
            <remote-alias>Deaths Per 10,000 motor vehicles</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1913-2018_B48C1D0E1FE9472DB44990C4B196598E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths Per 100,000,000 vehicle miles</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Deaths Per 100,000,000 vehicle miles]</local-name>
            <parent-name>[1913-2018]</parent-name>
            <remote-alias>Deaths Per 100,000,000 vehicle miles</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1913-2018_B48C1D0E1FE9472DB44990C4B196598E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths Per 100,000 population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths Per 100,000 population]</local-name>
            <parent-name>[1913-2018]</parent-name>
            <remote-alias>Deaths Per 100,000 population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1913-2018_B48C1D0E1FE9472DB44990C4B196598E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Number of Motor Vehicle Deaths' datatype='integer' name='[Number of deaths]' role='measure' type='quantitative' />
      <column datatype='string' name='[Year]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='1913-2018' datatype='table' name='[__tableau_internal_object_id__].[1913-2018_B48C1D0E1FE9472DB44990C4B196598E]' role='measure' type='quantitative' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of deaths]' derivation='Sum' name='[sum:Number of deaths:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Year:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1919&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;1941&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;1961&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;1981&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1933&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1953&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1973&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1993&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2013&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2018&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1915&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1937&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1957&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1977&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1997&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2017&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1924&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1945&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1965&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1985&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2005&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1921&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1942&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1962&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1982&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2002&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1916&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1938&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1958&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1978&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1998&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;1930&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;1951&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;1971&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;1991&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2011&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1913&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1934&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1954&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1974&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1994&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2014&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1928&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1949&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1969&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1989&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2009&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1917&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1939&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1959&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1979&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1999&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1925&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1946&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1966&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1986&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2006&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1926&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1947&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1967&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1987&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2007&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;1929&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;1950&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;1970&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;1990&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2010&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1931&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1932&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1952&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1972&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1992&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2012&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1922&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1943&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1963&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1983&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2003&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1918&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1940&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1960&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1980&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2000&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1920&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1935&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1955&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1975&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1995&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2015&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1927&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1948&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1968&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1988&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2008&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1923&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1944&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1964&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1984&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2004&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1914&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1936&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1956&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1976&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1996&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2016&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0s0yvmu1k79su718iaav41u2hrun]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1s3us45131klwi1f6k7b30l26amm].[sum:Fatalities:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0s0yvmu1k79su718iaav41u2hrun].[sum:Number of deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1s3us45131klwi1f6k7b30l26amm].[sum:Fatalities:qk]:1&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.1s3us45131klwi1f6k7b30l26amm'>
        <column caption='Number of Airline Fatalities' datatype='integer' name='[Fatalities]' role='measure' type='quantitative' />
        <column-instance column='[Fatalities]' derivation='Sum' name='[sum:Fatalities:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='1913-2018' id='1913-2018_B48C1D0E1FE9472DB44990C4B196598E'>
            <properties context=''>
              <relation connection='excel-direct.1x3tm9b12ciugu1asl3se1val6fk' name='1913-2018' table='[&apos;1913-2018$&apos;]' type='table'>
                <columns gridOrigin='A1:H107:no:A1:H107:0' header='yes' outcome='2'>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='integer' name='Number of deaths' ordinal='1' />
                  <column datatype='real' name='Estimated Vehicles (millions)' ordinal='2' />
                  <column datatype='string' name='Estimated Vehicle miles (billions)' ordinal='3' />
                  <column datatype='real' name='Estimated Drivers (millions)' ordinal='4' />
                  <column datatype='real' name='Deaths Per 10,000 motor vehicles' ordinal='5' />
                  <column datatype='string' name='Deaths Per 100,000,000 vehicle miles' ordinal='6' />
                  <column datatype='real' name='Deaths Per 100,000 population' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='airline-safety' inline='true' name='federated.0y7j28n1cwit3r104kl9i0gw33mb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airline-safety' name='textscan.1jv2pkc0mxhho410rffzt11zir5z'>
            <connection class='textscan' directory='C:/Users/Zack/Documents/Bellevue/DSC 640' filename='airline-safety.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1jv2pkc0mxhho410rffzt11zir5z' name='airline-safety.csv' table='[airline-safety#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='airline' ordinal='0' />
            <column datatype='integer' name='avail_seat_km_per_week' ordinal='1' />
            <column datatype='integer' name='incidents_85_99' ordinal='2' />
            <column datatype='integer' name='fatal_accidents_85_99' ordinal='3' />
            <column datatype='integer' name='fatalities_85_99' ordinal='4' />
            <column datatype='integer' name='incidents_00_14' ordinal='5' />
            <column datatype='integer' name='fatal_accidents_00_14' ordinal='6' />
            <column datatype='integer' name='fatalities_00_14' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1jv2pkc0mxhho410rffzt11zir5z' name='airline-safety.csv' table='[airline-safety#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='airline' ordinal='0' />
            <column datatype='integer' name='avail_seat_km_per_week' ordinal='1' />
            <column datatype='integer' name='incidents_85_99' ordinal='2' />
            <column datatype='integer' name='fatal_accidents_85_99' ordinal='3' />
            <column datatype='integer' name='fatalities_85_99' ordinal='4' />
            <column datatype='integer' name='incidents_00_14' ordinal='5' />
            <column datatype='integer' name='fatal_accidents_00_14' ordinal='6' />
            <column datatype='integer' name='fatalities_00_14' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airline]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>airline</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_4F1E464FCC064A51A2E9989415698C44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avail_seat_km_per_week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[avail_seat_km_per_week]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>avail_seat_km_per_week</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_4F1E464FCC064A51A2E9989415698C44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incidents_85_99</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incidents_85_99]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>incidents_85_99</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_4F1E464FCC064A51A2E9989415698C44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatal_accidents_85_99</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatal_accidents_85_99]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>fatal_accidents_85_99</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_4F1E464FCC064A51A2E9989415698C44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatalities_85_99</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatalities_85_99]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>fatalities_85_99</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_4F1E464FCC064A51A2E9989415698C44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incidents_00_14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incidents_00_14]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>incidents_00_14</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_4F1E464FCC064A51A2E9989415698C44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatal_accidents_00_14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatal_accidents_00_14]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>fatal_accidents_00_14</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_4F1E464FCC064A51A2E9989415698C44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatalities_00_14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatalities_00_14]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>fatalities_00_14</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_4F1E464FCC064A51A2E9989415698C44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Combined Incidents' datatype='integer' name='[Calculation_1305199496284368896]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[incidents_00_14] + [incidents_85_99]' />
      </column>
      <column caption='Combined Fatalities' datatype='integer' name='[Calculation_1305199496285532161]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[fatalities_00_14]+ [fatalities_85_99]' />
      </column>
      <column caption='Combined Fatal Accidents' datatype='integer' name='[Calculation_1305199497342472194]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[fatal_accidents_00_14] + [fatal_accidents_85_99]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='airline-safety.csv' datatype='table' name='[__tableau_internal_object_id__].[airline-safety.csv_4F1E464FCC064A51A2E9989415698C44]' role='measure' type='quantitative' />
      <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
      <column caption='Avail Seat Km Per Week' datatype='integer' name='[avail_seat_km_per_week]' role='dimension' type='quantitative' />
      <column caption='Fatal Accidents 00 14' datatype='integer' name='[fatal_accidents_00_14]' role='measure' type='quantitative' />
      <column caption='Fatal Accidents 85 99' datatype='integer' name='[fatal_accidents_85_99]' role='measure' type='quantitative' />
      <column caption='Fatalities 00 14' datatype='integer' name='[fatalities_00_14]' role='measure' type='quantitative' />
      <column caption='Fatalities 85 99' datatype='integer' name='[fatalities_85_99]' role='measure' type='quantitative' />
      <column caption='Incidents 00 14' datatype='integer' name='[incidents_00_14]' role='measure' type='quantitative' />
      <column caption='Incidents 85 99' datatype='integer' name='[incidents_85_99]' role='measure' type='quantitative' />
      <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1305199496284368896]' derivation='Sum' name='[sum:Calculation_1305199496284368896:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1305199496285532161]' derivation='Sum' name='[sum:Calculation_1305199496285532161:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1305199497342472194]' derivation='Sum' name='[sum:Calculation_1305199497342472194:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fatal_accidents_00_14]' derivation='Sum' name='[sum:fatal_accidents_00_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fatal_accidents_85_99]' derivation='Sum' name='[sum:fatal_accidents_85_99:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fatalities_00_14]' derivation='Sum' name='[sum:fatalities_00_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fatalities_85_99]' derivation='Sum' name='[sum:fatalities_85_99:qk]' pivot='key' type='quantitative' />
      <column-instance column='[incidents_00_14]' derivation='Sum' name='[sum:incidents_00_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[incidents_85_99]' derivation='Sum' name='[sum:incidents_85_99:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:airline:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alaska Airlines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan Airlines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TAP - Air Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aer Lingus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egyptair&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Air Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Garuda Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lankan / AirLanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austrian Airlines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LAN Airlines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;US Airways / America West*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alitalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya Airways&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thai Airways&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Air France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gulf Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SWISS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COPA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Royal Air Maroc&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aeroflot&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Al&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore Airlines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China Airlines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philippine Airlines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Air India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hawaiian Airlines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TACA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Avianca&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lufthansa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam Airlines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British Airways*&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malaysia Airlines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virgin Atlantic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Condor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qantas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Delta / Northwest*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SAS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;All Nippon Airways&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KLM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkish Airlines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Air New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TAM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aerolineas Argentinas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopian Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South African&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cathay Pacific*&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Xiamen Airlines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Korean Air&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United / Continental&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aeromexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finnair&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Southwest Airlines&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='color_blind_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatalities_85_99:qk]&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:incidents_00_14:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:Calculation_1305199496284368896:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatal_accidents_85_99:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:Calculation_1305199497342472194:qk]&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:incidents_85_99:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatal_accidents_00_14:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0y7j28n1cwit3r104kl9i0gw33mb]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatalities_00_14:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:Calculation_1305199496285532161:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='airline-safety.csv' id='airline-safety.csv_4F1E464FCC064A51A2E9989415698C44'>
            <properties context=''>
              <relation connection='textscan.1jv2pkc0mxhho410rffzt11zir5z' name='airline-safety.csv' table='[airline-safety#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='airline' ordinal='0' />
                  <column datatype='integer' name='avail_seat_km_per_week' ordinal='1' />
                  <column datatype='integer' name='incidents_85_99' ordinal='2' />
                  <column datatype='integer' name='fatal_accidents_85_99' ordinal='3' />
                  <column datatype='integer' name='fatalities_85_99' ordinal='4' />
                  <column datatype='integer' name='incidents_00_14' ordinal='5' />
                  <column datatype='integer' name='fatal_accidents_00_14' ordinal='6' />
                  <column datatype='integer' name='fatalities_00_14' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Comparing Incidents' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Comparing Incidents' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Airline Fatalities by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Fatalities by year)' name='federated.1s3us45131klwi1f6k7b30l26amm' />
          </datasources>
          <datasource-dependencies datasource='federated.1s3us45131klwi1f6k7b30l26amm'>
            <column caption='Number of Airline Fatalities' datatype='integer' name='[Fatalities]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fatalities]' derivation='Sum' name='[sum:Fatalities:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s3us45131klwi1f6k7b30l26amm].[none:Year:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1918&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1920&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1925&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1930&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1935&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1940&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1945&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1950&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1955&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1960&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1965&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1970&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1975&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1980&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1985&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1990&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1995&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2000&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2005&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2010&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2015&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2020&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1s3us45131klwi1f6k7b30l26amm].[none:Year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1s3us45131klwi1f6k7b30l26amm].[sum:Fatalities:qk]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s3us45131klwi1f6k7b30l26amm].[sum:Fatalities:qk]</rows>
        <cols>[federated.1s3us45131klwi1f6k7b30l26amm].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{5A681C79-71DF-4908-91C0-AE6633F13CD3}' />
    </worksheet>
    <worksheet name='Airline vs Motor Vehicle deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='1913-2018 (Motor-Vehicle Deaths and Rates, 1913-2018)' name='federated.0s0yvmu1k79su718iaav41u2hrun' />
            <datasource caption='Sheet1 (Fatalities by year)' name='federated.1s3us45131klwi1f6k7b30l26amm' />
          </datasources>
          <datasource-dependencies datasource='federated.0s0yvmu1k79su718iaav41u2hrun'>
            <column caption='Number of Motor Vehicle Deaths' datatype='integer' name='[Number of deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of deaths]' derivation='Sum' name='[sum:Number of deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1s3us45131klwi1f6k7b30l26amm'>
            <column caption='Number of Airline Fatalities' datatype='integer' name='[Fatalities]' role='measure' type='quantitative' />
            <column-instance column='[Fatalities]' derivation='Sum' name='[sum:Fatalities:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s0yvmu1k79su718iaav41u2hrun].[none:Year:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1930&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1935&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1940&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1945&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1950&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1955&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1960&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1965&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1970&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1975&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1980&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1985&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1990&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1995&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2000&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2005&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2010&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2015&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2018&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0s0yvmu1k79su718iaav41u2hrun].[none:Year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0s0yvmu1k79su718iaav41u2hrun].[sum:Number of deaths:qk]' scope='cols' value='Number of Deaths' />
            <encoding attr='space' class='0' field='[federated.1s3us45131klwi1f6k7b30l26amm].[sum:Fatalities:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1s3us45131klwi1f6k7b30l26amm].[sum:Fatalities:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0s0yvmu1k79su718iaav41u2hrun].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0s0yvmu1k79su718iaav41u2hrun].[sum:Number of deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0s0yvmu1k79su718iaav41u2hrun].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1s3us45131klwi1f6k7b30l26amm].[sum:Fatalities:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0s0yvmu1k79su718iaav41u2hrun].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0s0yvmu1k79su718iaav41u2hrun].[none:Year:nk]</rows>
        <cols>([federated.0s0yvmu1k79su718iaav41u2hrun].[sum:Number of deaths:qk] + [federated.1s3us45131klwi1f6k7b30l26amm].[sum:Fatalities:qk])</cols>
      </table>
      <simple-id uuid='{187A2DA1-6AE7-4B68-8EBE-8ED0B6C59BA3}' />
    </worksheet>
    <worksheet name='Comparing Fatal Accidents'>
      <table>
        <view>
          <datasources>
            <datasource caption='airline-safety' name='federated.0y7j28n1cwit3r104kl9i0gw33mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0y7j28n1cwit3r104kl9i0gw33mb'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Fatal Accidents 00 14' datatype='integer' name='[fatal_accidents_00_14]' role='measure' type='quantitative' />
            <column caption='Fatal Accidents 85 99' datatype='integer' name='[fatal_accidents_85_99]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[fatal_accidents_00_14]' derivation='None' name='[none:fatal_accidents_00_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fatal_accidents_85_99]' derivation='None' name='[none:fatal_accidents_85_99:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fatal_accidents_00_14]' derivation='Sum' name='[sum:fatal_accidents_00_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fatal_accidents_85_99]' derivation='Sum' name='[sum:fatal_accidents_85_99:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatal_accidents_00_14:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatal_accidents_85_99:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:fatal_accidents_00_14:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <filter class='quantitative' column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:fatal_accidents_85_99:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]</column>
            <column>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:fatal_accidents_85_99:qk]</column>
            <column>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:fatal_accidents_00_14:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatal_accidents_00_14:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatal_accidents_00_14:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatal_accidents_85_99:qk]' scope='cols' value='Number of Fatal Accidents' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatal_accidents_00_14:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatal_accidents_85_99:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:airline:nk]</rows>
        <cols>([federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatal_accidents_85_99:qk] + [federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatal_accidents_00_14:qk])</cols>
      </table>
      <simple-id uuid='{0AC84DA5-AA78-4817-A455-B1607B89C6E4}' />
    </worksheet>
    <worksheet name='Comparing Fatalities'>
      <table>
        <view>
          <datasources>
            <datasource caption='airline-safety' name='federated.0y7j28n1cwit3r104kl9i0gw33mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0y7j28n1cwit3r104kl9i0gw33mb'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Fatalities 00 14' datatype='integer' name='[fatalities_00_14]' role='measure' type='quantitative' />
            <column caption='Fatalities 85 99' datatype='integer' name='[fatalities_85_99]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[fatalities_00_14]' derivation='None' name='[none:fatalities_00_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fatalities_85_99]' derivation='None' name='[none:fatalities_85_99:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fatalities_00_14]' derivation='Sum' name='[sum:fatalities_00_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fatalities_85_99]' derivation='Sum' name='[sum:fatalities_85_99:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:fatalities_00_14:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <filter class='quantitative' column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:fatalities_85_99:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:fatalities_85_99:qk]</column>
            <column>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:fatalities_00_14:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatalities_00_14:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatalities_00_14:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatalities_85_99:qk]' scope='cols' value='Number of Fatalities' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatalities_00_14:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatalities_85_99:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:airline:nk]</rows>
        <cols>([federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatalities_85_99:qk] + [federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:fatalities_00_14:qk])</cols>
      </table>
      <simple-id uuid='{0ECA09EE-3F86-40E6-BCD8-774974A4C9C7}' />
    </worksheet>
    <worksheet name='Comparing Incidents'>
      <table>
        <view>
          <datasources>
            <datasource caption='airline-safety' name='federated.0y7j28n1cwit3r104kl9i0gw33mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0y7j28n1cwit3r104kl9i0gw33mb'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Incidents 00 14' datatype='integer' name='[incidents_00_14]' role='measure' type='quantitative' />
            <column caption='Incidents 85 99' datatype='integer' name='[incidents_85_99]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[incidents_00_14]' derivation='None' name='[none:incidents_00_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[incidents_85_99]' derivation='None' name='[none:incidents_85_99:qk]' pivot='key' type='quantitative' />
            <column-instance column='[incidents_00_14]' derivation='Sum' name='[sum:incidents_00_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[incidents_85_99]' derivation='Sum' name='[sum:incidents_85_99:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:incidents_00_14:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <filter class='quantitative' column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:incidents_85_99:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:incidents_85_99:qk]</column>
            <column>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:incidents_00_14:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:incidents_00_14:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:incidents_00_14:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:incidents_85_99:qk]' scope='cols' value='Number of Incidents' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:incidents_00_14:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:incidents_85_99:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:airline:nk]</rows>
        <cols>([federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:incidents_85_99:qk] + [federated.0y7j28n1cwit3r104kl9i0gw33mb].[sum:incidents_00_14:qk])</cols>
      </table>
      <simple-id uuid='{7F44A440-0835-49D3-B250-6E8F07F3DE42}' />
    </worksheet>
    <worksheet name='Motor Vehicle Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='1913-2018 (Motor-Vehicle Deaths and Rates, 1913-2018)' name='federated.0s0yvmu1k79su718iaav41u2hrun' />
          </datasources>
          <datasource-dependencies datasource='federated.0s0yvmu1k79su718iaav41u2hrun'>
            <column caption='Number of Motor Vehicle Deaths' datatype='integer' name='[Number of deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of deaths]' derivation='Sum' name='[sum:Number of deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s0yvmu1k79su718iaav41u2hrun].[none:Year:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1913&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1915&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1920&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1925&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1930&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1935&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1940&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1945&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1950&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1955&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1960&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1965&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1970&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1975&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1980&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1985&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1990&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;1995&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2000&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2005&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2010&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2015&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2018&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0s0yvmu1k79su718iaav41u2hrun].[none:Year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
                <format attr='mark-color' value='#998f8c' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s0yvmu1k79su718iaav41u2hrun].[sum:Number of deaths:qk]</rows>
        <cols>[federated.0s0yvmu1k79su718iaav41u2hrun].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{A83E692B-90CC-4D6E-9622-F3F2B07A7131}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98230' id='5' param='horz' w='99064' x='468' y='885'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98230' id='3' w='99064' x='468' y='885'>
              <zone h='98230' id='1' name='Airline vs Motor Vehicle deaths' w='99064' x='468' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='6416' id='6' name='Airline vs Motor Vehicle deaths' pane-specification-id='1' param='[federated.0s0yvmu1k79su718iaav41u2hrun].[:Measure Names]' w='12288' x='86893' y='885' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='10' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98230' id='9' param='vert' w='99064' x='468' y='885'>
                <zone fixed-size='280' h='98230' id='1' is-fixed='true' name='Airline vs Motor Vehicle deaths' w='99064' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='6416' id='6' name='Airline vs Motor Vehicle deaths' pane-specification-id='1' param='[federated.0s0yvmu1k79su718iaav41u2hrun].[:Measure Names]' w='12288' x='86893' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F86DAB2B-9A1F-4DFD-B4C3-27EC8B1B9A6A}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' maximized='true' name='Comparing Incidents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[Multiple Values]</field>
            <field>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:airline:nk]</field>
            <field>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:incidents_00_14:qk]</field>
            <field>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:incidents_85_99:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCF22E32-79A1-45A7-98AA-DAFA4A13E37F}' />
    </window>
    <window class='worksheet' name='Motor Vehicle Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0s0yvmu1k79su718iaav41u2hrun].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DD09031-B197-457C-AB2D-0F309118DEA8}' />
    </window>
    <window class='worksheet' name='Airline Fatalities by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:airline:nk]</field>
            <field>[federated.1s3us45131klwi1f6k7b30l26amm].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C0BF6FF0-C4C3-4571-B627-EA6AD8228FB3}' />
    </window>
    <window class='worksheet' name='Comparing Fatal Accidents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='10' param='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[Multiple Values]</field>
            <field>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:airline:nk]</field>
            <field>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:fatal_accidents_00_14:qk]</field>
            <field>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:fatal_accidents_85_99:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEBECA53-BCCD-4F97-AC23-58E16BEE8B89}' />
    </window>
    <window class='worksheet' name='Comparing Fatalities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='12' param='[federated.0y7j28n1cwit3r104kl9i0gw33mb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[Multiple Values]</field>
            <field>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:airline:nk]</field>
            <field>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:fatalities_00_14:qk]</field>
            <field>[federated.0y7j28n1cwit3r104kl9i0gw33mb].[none:fatalities_85_99:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9EDC996B-435F-440E-B1C5-DCD7BEA135A9}' />
    </window>
    <window class='worksheet' name='Airline vs Motor Vehicle deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='178'>
            <card pane-specification-id='1' param='[federated.0s0yvmu1k79su718iaav41u2hrun].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0s0yvmu1k79su718iaav41u2hrun].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF503467-5188-4C71-A1A1-FCBC4CA32CF8}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Airline vs Motor Vehicle deaths'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E3CAE082-A8ED-41EF-AE4D-1C3A6D5CC998}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Airline Fatalities by year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Airline vs Motor Vehicle deaths' width='192'>
      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
      ZuT12Xr1Tf4/9NJg0OoS3M4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Comparing Fatal Accidents' width='192'>
      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
      a4HzDQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Comparing Fatalities' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Comparing Incidents' width='192'>
      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
      ypROAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      rBYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Motor Vehicle Deaths' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
